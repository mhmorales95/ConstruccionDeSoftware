/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pasteleria;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Matías
 */
public class Pedido extends javax.swing.JFrame {

    private String comentario = "";

    /**
     * Creates new form Pedido
     */
    public Pedido() {
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
        this.abono.setText("0");
        fechaActual();
        jButton5.setContentAreaFilled(false);
        numeroPedido();

    }

    public void numeroPedido() {
        MySQL my = new MySQL();
        Connection con = my.getConnection();
        Statement sql;
        int numeroPedido = 0;
        try {

            sql = con.createStatement();
            PreparedStatement stmt = con.prepareStatement("SELECT MAX(codigo)"
                    + "FROM pedido;");

            ResultSet rs;
            rs = stmt.executeQuery();

            boolean r = rs.next();
            while (r) {

                numeroPedido = rs.getInt("MAX(codigo)") + 1;

                r = rs.next();
            }

            this.numeroPedido.setText(numeroPedido + "");
        } catch (SQLException ex) {
            Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        codigoCliente = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        nombreCliente = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        numeroPedido = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        seleccionFecha = new com.toedter.calendar.JDateChooser();
        horaActual = new javax.swing.JLabel();
        seleccionHora = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        codigoProducto = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        nombreProducto = new javax.swing.JTextField();
        cantidad = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        precioProducto = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        totalProducto = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        anadir = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        botonGuardar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        totalPedido = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        abono = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        porPagar = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pedidos");
        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1024, 700));
        setMinimumSize(new java.awt.Dimension(1024, 700));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(211, 80, 97));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos cliente", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setToolTipText("");
        jPanel1.setMaximumSize(new java.awt.Dimension(310, 150));
        jPanel1.setMinimumSize(new java.awt.Dimension(310, 150));
        jPanel1.setPreferredSize(new java.awt.Dimension(310, 150));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Código:");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre:");

        codigoCliente.setMaximumSize(new java.awt.Dimension(180, 20));
        codigoCliente.setMinimumSize(new java.awt.Dimension(180, 20));
        codigoCliente.setPreferredSize(new java.awt.Dimension(180, 20));
        codigoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoClienteActionPerformed(evt);
            }
        });
        codigoCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codigoClienteKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codigoClienteKeyTyped(evt);
            }
        });

        jButton8.setText("Cargar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Buscar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        nombreCliente.setBackground(new java.awt.Color(255, 255, 255));
        nombreCliente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        nombreCliente.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton9)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(codigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8))
                            .addComponent(nombreCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(codigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 85, -1, -1));

        jPanel3.setBackground(new java.awt.Color(211, 80, 97));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos pedido", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.setMaximumSize(new java.awt.Dimension(678, 148));
        jPanel3.setMinimumSize(new java.awt.Dimension(678, 148));
        jPanel3.setName(""); // NOI18N
        jPanel3.setPreferredSize(new java.awt.Dimension(678, 148));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("N° Pedido:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Fecha entrega:");

        numeroPedido.setEditable(false);
        numeroPedido.setMaximumSize(new java.awt.Dimension(59, 20));
        numeroPedido.setMinimumSize(new java.awt.Dimension(59, 20));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Fecha pedido:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Hora entrega:");

        seleccionFecha.setMaximumSize(new java.awt.Dimension(59, 20));
        seleccionFecha.setMinimumSize(new java.awt.Dimension(59, 20));
        seleccionFecha.setPreferredSize(new java.awt.Dimension(59, 20));
        seleccionFecha.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                seleccionFechaPropertyChange(evt);
            }
        });

        horaActual.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        horaActual.setForeground(new java.awt.Color(255, 255, 255));
        horaActual.setMaximumSize(new java.awt.Dimension(77, 14));
        horaActual.setMinimumSize(new java.awt.Dimension(77, 14));
        horaActual.setPreferredSize(new java.awt.Dimension(77, 14));

        seleccionHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar hora", "09:00 - 10:00", "10:00 - 11:00", "11:00 - 12:00", "12:00 - 13:00", "13:00 - 14:00", "14:00 - 15:00", "15:00 - 16:00", "16:00 - 17:00", "17:00 - 18:00", "18:00 - 19:00", "19:00 - 20:00", "20:00 - 21:00" }));
        seleccionHora.setMaximumSize(new java.awt.Dimension(129, 20));
        seleccionHora.setMinimumSize(new java.awt.Dimension(129, 20));
        seleccionHora.setPreferredSize(new java.awt.Dimension(129, 20));
        seleccionHora.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                seleccionHoraItemStateChanged(evt);
            }
        });
        seleccionHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionHoraActionPerformed(evt);
            }
        });
        seleccionHora.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                seleccionHoraPropertyChange(evt);
            }
        });
        seleccionHora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                seleccionHoraKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(numeroPedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(seleccionFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(horaActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seleccionHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(numeroPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(horaActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(jLabel12)
                        .addComponent(seleccionHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(seleccionFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 85, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(243, 148, 51));
        jLabel14.setText("Resumen:");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 352, -1, -1));

        jPanel4.setBackground(new java.awt.Color(211, 80, 97));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Añadir ítem", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel4.setMaximumSize(new java.awt.Dimension(998, 100));
        jPanel4.setMinimumSize(new java.awt.Dimension(998, 100));
        jPanel4.setPreferredSize(new java.awt.Dimension(998, 100));

        jButton1.setText("Buscar");
        jButton1.setMaximumSize(new java.awt.Dimension(70, 30));
        jButton1.setMinimumSize(new java.awt.Dimension(70, 30));
        jButton1.setPreferredSize(new java.awt.Dimension(70, 30));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        codigoProducto.setMaximumSize(new java.awt.Dimension(105, 20));
        codigoProducto.setMinimumSize(new java.awt.Dimension(105, 20));
        codigoProducto.setName(""); // NOI18N
        codigoProducto.setPreferredSize(new java.awt.Dimension(105, 20));
        codigoProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoProductoActionPerformed(evt);
            }
        });
        codigoProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codigoProductoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codigoProductoKeyTyped(evt);
            }
        });

        jButton2.setMaximumSize(new java.awt.Dimension(30, 20));
        jButton2.setMinimumSize(new java.awt.Dimension(30, 20));
        jButton2.setPreferredSize(new java.awt.Dimension(30, 20));

        nombreProducto.setEditable(false);
        nombreProducto.setMaximumSize(new java.awt.Dimension(240, 20));
        nombreProducto.setMinimumSize(new java.awt.Dimension(240, 20));
        nombreProducto.setPreferredSize(new java.awt.Dimension(240, 20));
        nombreProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreProductoActionPerformed(evt);
            }
        });

        cantidad.setMaximumSize(new java.awt.Dimension(43, 20));
        cantidad.setMinimumSize(new java.awt.Dimension(43, 20));
        cantidad.setPreferredSize(new java.awt.Dimension(43, 20));
        cantidad.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                cantidadInputMethodTextChanged(evt);
            }
        });
        cantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantidadActionPerformed(evt);
            }
        });
        cantidad.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cantidadPropertyChange(evt);
            }
        });
        cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantidadKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Detalle");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Cantidad");

        precioProducto.setEditable(false);
        precioProducto.setMaximumSize(new java.awt.Dimension(70, 20));
        precioProducto.setMinimumSize(new java.awt.Dimension(70, 20));
        precioProducto.setPreferredSize(new java.awt.Dimension(70, 20));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Precio");

        totalProducto.setEditable(false);
        totalProducto.setMaximumSize(new java.awt.Dimension(70, 20));
        totalProducto.setMinimumSize(new java.awt.Dimension(70, 20));
        totalProducto.setPreferredSize(new java.awt.Dimension(70, 20));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Total");

        anadir.setText("Añadir");
        anadir.setMargin(new java.awt.Insets(2, 2, 2, 2));
        anadir.setMaximumSize(new java.awt.Dimension(70, 20));
        anadir.setMinimumSize(new java.awt.Dimension(70, 20));
        anadir.setPreferredSize(new java.awt.Dimension(70, 20));
        anadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anadirActionPerformed(evt);
            }
        });
        anadir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                anadirKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                anadirKeyTyped(evt);
            }
        });

        jButton4.setText("Agregar comentario");
        jButton4.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton4.setMaximumSize(new java.awt.Dimension(130, 20));
        jButton4.setMinimumSize(new java.awt.Dimension(130, 20));
        jButton4.setPreferredSize(new java.awt.Dimension(130, 20));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(codigoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(precioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(totalProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(anadir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel17))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(codigoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(precioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(totalProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(anadir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 246, -1, -1));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/iconoEliminar.png"))); // NOI18N
        jButton5.setMaximumSize(new java.awt.Dimension(30, 30));
        jButton5.setMinimumSize(new java.awt.Dimension(30, 30));
        jButton5.setPreferredSize(new java.awt.Dimension(30, 30));
        jButton5.setOpaque(true);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(925, 403, -1, -1));

        jButton6.setBackground(new java.awt.Color(123, 101, 122));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Volver");
        jButton6.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 650, -1, -1));

        botonGuardar.setBackground(new java.awt.Color(123, 101, 122));
        botonGuardar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        botonGuardar.setForeground(new java.awt.Color(255, 255, 255));
        botonGuardar.setText("Guardar");
        botonGuardar.setMargin(new java.awt.Insets(2, 2, 2, 2));
        botonGuardar.setMaximumSize(new java.awt.Dimension(146, 37));
        botonGuardar.setMinimumSize(new java.awt.Dimension(146, 37));
        botonGuardar.setPreferredSize(new java.awt.Dimension(146, 37));
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(botonGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 650, 90, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descripción", "Cantidad", "Comentario", "Precio unitario", "Precio total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 372, 909, 185));

        jPanel2.setBackground(new java.awt.Color(211, 80, 97));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Precio total:");

        totalPedido.setEditable(false);
        totalPedido.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        totalPedido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(252, 162, 213)));
        totalPedido.setMaximumSize(new java.awt.Dimension(140, 34));
        totalPedido.setMinimumSize(new java.awt.Dimension(140, 34));
        totalPedido.setPreferredSize(new java.awt.Dimension(140, 34));
        totalPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalPedidoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Abono:");

        abono.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        abono.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(252, 162, 213)));
        abono.setMaximumSize(new java.awt.Dimension(140, 34));
        abono.setMinimumSize(new java.awt.Dimension(140, 34));
        abono.setPreferredSize(new java.awt.Dimension(140, 34));
        abono.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                abonoInputMethodTextChanged(evt);
            }
        });
        abono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abonoActionPerformed(evt);
            }
        });
        abono.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                abonoPropertyChange(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Por pagar:");

        porPagar.setEditable(false);
        porPagar.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        porPagar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(252, 162, 213)));
        porPagar.setMaximumSize(new java.awt.Dimension(140, 34));
        porPagar.setMinimumSize(new java.awt.Dimension(140, 34));
        porPagar.setPreferredSize(new java.awt.Dimension(140, 34));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(totalPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(abono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(porPagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(totalPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(abono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(porPagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 570, 1000, 60));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/pedido.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        jLabel4.setMaximumSize(new java.awt.Dimension(1024, 700));
        jLabel4.setMinimumSize(new java.awt.Dimension(1024, 700));
        jLabel4.setPreferredSize(new java.awt.Dimension(1024, 700));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void totalPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalPedidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalPedidoActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        try {
            llamarCliente(codigoCliente.getText());

        } catch (SQLException ex) {
            Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    public void fechaActual() {
        Date date = new Date();
        Format dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        horaActual.setText(dateFormat.format(date));

    }


    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        BusquedaCliente b = new BusquedaCliente(this, true);
        b.setVisible(true);

        codigoCliente.setText(b.obtenerCodigo());
        nombreCliente.setText(b.obtenerNombre());

    }//GEN-LAST:event_jButton9ActionPerformed


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        BusquedaProducto b = new BusquedaProducto(this, true);
        b.setVisible(true);

        //limpiarVentana();
        codigoProducto.setText(b.obtenerCodigo());
        nombreProducto.setText(b.obtenerNombre());
        precioProducto.setText(b.obtenerPrecio());
        cantidad.requestFocus();
    }//GEN-LAST:event_jButton1ActionPerformed


    private void cantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantidadActionPerformed
        if (!cantidad.getText().equals("")) {
            anadir.requestFocus();
            try {
                totalProducto.setText("" + (int) Double.parseDouble(cantidad.getText()) * Integer.parseInt(precioProducto.getText()));

            } catch (Exception e) {
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debes ingresar una cantidad", "Información", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_cantidadActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Comentarios c = new Comentarios(this, true);
        c.setVisible(true);

        comentario = c.obtenerTexto();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void anadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anadirActionPerformed
       anadir();
       
    }//GEN-LAST:event_anadirActionPerformed

    private void anadir(){
        if (cantidad.getText().equals("")){
            cantidad.requestFocus();
            JOptionPane.showMessageDialog(this, "Debe ingresar cantidad", "Información", JOptionPane.INFORMATION_MESSAGE);
            
        }else{
        if (totalPedido.getText().equals("")) {
            totalProducto.setText("" + (int) Double.parseDouble(cantidad.getText()) * Integer.parseInt(precioProducto.getText()));
            cargarProductoATabla();
            limpiarSeccionItem();
        } else {
            if (totalProducto.getText().equals("")){
                 totalProducto.setText("" + (int) Double.parseDouble(cantidad.getText()) * Integer.parseInt(precioProducto.getText()));
                 
            }else{
                cargarProductoATabla();
                limpiarSeccionItem();
            }
            
        }
        }
    }
    private void nombreProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreProductoActionPerformed

    private void anadirKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_anadirKeyTyped

    }//GEN-LAST:event_anadirKeyTyped

    private void anadirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_anadirKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            anadir();
        }
    }//GEN-LAST:event_anadirKeyPressed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void abonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abonoActionPerformed
        // TODO add your handling code here:
        verRestante();
    }//GEN-LAST:event_abonoActionPerformed

    private void abonoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_abonoPropertyChange

    }//GEN-LAST:event_abonoPropertyChange

    private void abonoInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_abonoInputMethodTextChanged

    }//GEN-LAST:event_abonoInputMethodTextChanged

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        eliminarFilaDeTabla(jTable1);
        this.abono.setText("");
        this.porPagar.setText("");

    }//GEN-LAST:event_jButton5ActionPerformed


    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
        MySQL my = new MySQL();
        Connection con = my.getConnection();
        Statement sql;
        java.util.Date date = new Date();
        java.util.Date date2 = seleccionFecha.getDate();

        java.sql.Date fechaActual = new java.sql.Date(date.getTime());
        java.sql.Time horaActual = new java.sql.Time(date.getTime());
        if (!codigoCliente.getText().equals("") && seleccionFecha.getCalendar() != null
                && seleccionHora.getSelectedIndex() != 0 && jTable1.getRowCount() > 0) {

            if (abono.getText().equals("")) {
                abono.setText("0");
            }
            try {
                sql = con.createStatement();
                PreparedStatement stmt = con.prepareStatement("INSERT INTO pedido (codigoCliente, estado,"
                        + "fecha, hora, fechaEntrega, horaEntrega, codigoUsuario, precioTotal, abono, porPagar)"
                        + " VALUES (?,?,?,?,?,?,?,?,?,?);");

                stmt.setInt(1, Integer.parseInt(codigoCliente.getText()));

                stmt.setString(2, "");
                stmt.setDate(3, fechaActual);
                stmt.setTime(4, horaActual);

                java.sql.Date fechaSeleccionada = new java.sql.Date(date2.getTime());
                stmt.setDate(5, fechaSeleccionada);

                stmt.setString(6, (String) seleccionHora.getSelectedItem());

                stmt.setInt(7, MenuPrincipal.usuario);
                stmt.setInt(8, Integer.parseInt(totalPedido.getText()));
                stmt.setInt(9, Integer.parseInt(abono.getText()));
                stmt.setInt(10, Integer.parseInt(porPagar.getText()));

                stmt.executeUpdate();

            } catch (SQLException ex) {
                Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
            }

            //carga de detalle de productos
            DefaultTableModel tm = (DefaultTableModel) jTable1.getModel();

            int filas = jTable1.getRowCount();

            for (int i = 0; i < filas; i++) {
                String codigo = String.valueOf(tm.getValueAt(i, 0));
                double cantidad = Double.parseDouble(String.valueOf(tm.getValueAt(i, 2)));
                String comentario = String.valueOf(tm.getValueAt(i, 3));
                int unitario = Integer.parseInt(String.valueOf(tm.getValueAt(i, 4)));
                int total = Integer.parseInt(String.valueOf(tm.getValueAt(i, 5)));
                insertarDetalle(codigo, cantidad, comentario, unitario, total);
            }

            JOptionPane.showMessageDialog(this, "Pedido agregado", "Información", JOptionPane.INFORMATION_MESSAGE);
            limpiarVentana();
            limpiarTabla();
            numeroPedido();

        } else {
            JOptionPane.showMessageDialog(this, "Es necesario rellenar todos los campos", "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_botonGuardarActionPerformed

    private void codigoProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoProductoActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_codigoProductoActionPerformed

    private void codigoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoClienteActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_codigoClienteActionPerformed

    private void codigoClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoClienteKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                llamarCliente(codigoCliente.getText());
            } catch (SQLException ex) {
                Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_codigoClienteKeyPressed

    private void verificarRangoHorario() {
        seleccionHora.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                DateFormat formatoHora = new SimpleDateFormat("HH:mm");
                Date date = new Date();
                String fechaPc = formatoHora.format(date);
                if (seleccionHora.getSelectedIndex() == 0) {

                } else {
                    String seleccion = (String) seleccionHora.getSelectedItem();
                    String[] partes = seleccion.split(" - ");

                    if (fechaPc.compareTo(partes[1]) < 0) {
                        System.out.println("está dentro del rango");
                    } else {
                        JOptionPane.showMessageDialog(null, "Está fuera del rango de horario", "Información", JOptionPane.INFORMATION_MESSAGE);
                    }

                }
            }
        });

    }


    private void codigoProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoProductoKeyPressed
        // TODO add your handling code here:
//        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//            System.out.println("enter presionado");
//            BusquedaProducto b = new BusquedaProducto(this, true);
//            b.buscar(codigoProducto.getText(), nombreProducto, precioProducto);
//            cantidad.requestFocus();
//        }


    }//GEN-LAST:event_codigoProductoKeyPressed

    private void seleccionFechaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_seleccionFechaPropertyChange
        // TODO add your handling code here:
        if (seleccionFecha.getCalendar() == null) {

        } else {
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");

            String fechaSeleccionada = sdf.format(seleccionFecha.getCalendar().getTime());
            Date date = new Date();
            String fechaPc = sdf.format(date);

            if (fechaSeleccionada.compareTo(fechaPc) < 0) {
                JOptionPane.showMessageDialog(this, "No puedes realizar un pedido para una fecha posterior a la actual", "Información", JOptionPane.INFORMATION_MESSAGE);
                seleccionFecha.setCalendar(null);
                seleccionHora.setSelectedIndex(0);
            }
            if (fechaSeleccionada.compareTo(fechaPc) == 0) {
                verificarRangoHorario();
                seleccionHora.setSelectedIndex(0);
            } else {
                seleccionHora.setSelectedIndex(0);
            }

        }


    }//GEN-LAST:event_seleccionFechaPropertyChange

    private void seleccionHoraPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_seleccionHoraPropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_seleccionHoraPropertyChange

    private void seleccionHoraItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_seleccionHoraItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_seleccionHoraItemStateChanged

    private void seleccionHoraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_seleccionHoraKeyReleased
        // TODO add your handling code here:
        System.out.println("sirve");
    }//GEN-LAST:event_seleccionHoraKeyReleased

    private void seleccionHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionHoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seleccionHoraActionPerformed

    private void codigoClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoClienteKeyTyped
        // TODO add your handling code here:
        verificarCamposSinLetras(evt);
    }//GEN-LAST:event_codigoClienteKeyTyped

    private void codigoProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoProductoKeyTyped
        // TODO add your handling code here:
        verificarCamposSinLetras(evt);
    }//GEN-LAST:event_codigoProductoKeyTyped

    private void cantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadKeyTyped
        // TODO add your handling code here:
        verificarCamposSinLetras(evt);
    }//GEN-LAST:event_cantidadKeyTyped

    private void cantidadPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cantidadPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cantidadPropertyChange

    private void cantidadInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_cantidadInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cantidadInputMethodTextChanged

    private void verificarCamposSinLetras(KeyEvent evt) {
        char c = evt.getKeyChar();

        if (Character.isLetter(c)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Ingrese sólo números");
            codigoCliente.setCursor(null);
        } else if ((int) evt.getKeyChar() > 32 && (int) evt.getKeyChar() <= 47 || (int) evt.getKeyChar() >= 58
                && (int) evt.getKeyChar() <= 64 || (int) evt.getKeyChar() >= 91 && (int) evt.getKeyChar() <= 96
                || (int) evt.getKeyChar() >= 123 && (int) evt.getKeyChar() <= 255) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "Ingrese sólo números");
            codigoCliente.setCursor(null);
        }

    }

    public void insertarDetalle(String codigo, double cantidad, String comentario, int unitario, int total) {
        try {

            MySQL my = new MySQL();
            Connection con = my.getConnection();
            Statement sql;
            sql = con.createStatement();
            PreparedStatement stmt = con.prepareStatement("INSERT INTO pedidoDetalle (codigoProducto,"
                    + "cantidad, unitario, total, comentario, codigoPedido)"
                    + " VALUES (?,?,?,?,?,?);");

            stmt.setString(1, codigo);

            stmt.setDouble(2, cantidad);

            stmt.setInt(3, unitario);

            stmt.setInt(4, total);

            stmt.setString(5, comentario);

            stmt.setInt(6, Integer.parseInt(numeroPedido.getText()));

            stmt.executeUpdate();

        } catch (SQLException ex) {
            Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void eliminarFilaDeTabla(JTable tblDetalle) {
        DefaultTableModel modelo = (DefaultTableModel) tblDetalle.getModel();
        int fila = tblDetalle.getSelectedRow();
        if (fila >= 0) {
            int[] filasselec = tblDetalle.getSelectedRows();
            for (int i = 0; i < filasselec.length; i++) {
                modelo.removeRow(filasselec[i]);

                totalPedido.setText("" + sumarTotal());

            }
        } else {
            JOptionPane.showMessageDialog(null, "No Seleccionó ninguna fila", "Aviso", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void limpiarVentana() {
        this.cantidad.setText("");
        this.codigoProducto.setText("");
        this.nombreProducto.setText("");
        this.precioProducto.setText("");
        this.totalProducto.setText("");
        this.totalPedido.setText("");
        this.abono.setText("");
        this.porPagar.setText("");
        this.codigoCliente.setText("");
        this.seleccionFecha.cleanup();
        this.nombreCliente.setText("");
        this.seleccionHora.setSelectedIndex(0);
        this.seleccionFecha.setCalendar(null);
        this.numeroPedido.setText("");
    }

    public void limpiarSeccionItem() {
        this.cantidad.setText("");
        this.codigoProducto.setText("");
        this.nombreProducto.setText("");
        this.precioProducto.setText("");
        this.totalProducto.setText("");
    }

    public void limpiarTabla() {
        DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
        int a = jTable1.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            tb.removeRow(tb.getRowCount() - 1);
        }

    }

    public void cargarProductoATabla() {

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();

        System.out.println("total: " + totalProducto.getText());
        if (!this.cantidad.getText().equals("")) {
            Object[] fila = new Object[6];
            
            fila[0] = codigoProducto.getText();
            fila[1] = nombreProducto.getText();;
            fila[2] = cantidad.getText();
            fila[3] = comentario;
            fila[4] = precioProducto.getText();
            fila[5] = totalProducto.getText();
            modelo.addRow(fila);

            jTable1.setModel(modelo);
            comentario = "";
            double total = sumarTotal();
            totalPedido.setText("" + (int) total);
        } else {
            JOptionPane.showMessageDialog(this, "Debes ingresar una cantidad", "Información", JOptionPane.INFORMATION_MESSAGE);
        }

    }

    public void verRestante() {
        if (!this.abono.getText().equals("")) {
            String a = this.abono.getText();
            double abono = Double.parseDouble(a);
            double total = sumarTotal();

            double precioFinal = total - abono;

            this.porPagar.setText("" + (int) precioFinal);

        } else {
            JOptionPane.showMessageDialog(this, "Debes ingresar una cantidad", "Información", JOptionPane.INFORMATION_MESSAGE);
        }

    }

    public int sumarTotal() {
        DefaultTableModel tm = (DefaultTableModel) jTable1.getModel();

        int filas = jTable1.getRowCount();
        int suma = 0;
        for (int i = 0; i < filas; i++) {
            String dato = String.valueOf(tm.getValueAt(i, 5));
            suma += Integer.parseInt(dato);
        }

        return suma;
    }

    public void llamarCliente(String cod) throws SQLException {
        MySQL my = new MySQL();
        Connection con = my.getConnection();
        Statement sql;

        try {
            sql = con.createStatement();
            PreparedStatement stmt = con.prepareStatement("SELECT * FROM clientes WHERE codigo = ? ");
            stmt.setString(1, cod);
            ResultSet rs;
            rs = stmt.executeQuery();
            boolean r = rs.next();

            if (r == false) {
                JOptionPane.showMessageDialog(this, "El cliente no existe", "Información", JOptionPane.INFORMATION_MESSAGE);
            }

            while (r) {

                nombreCliente.setText(rs.getString("nombre"));
                r = rs.next();
            }

        } catch (SQLException ex) {
            Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            if (con != null) {
                con.close();
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField abono;
    private javax.swing.JButton anadir;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JTextField cantidad;
    private javax.swing.JTextField codigoCliente;
    private javax.swing.JTextField codigoProducto;
    private javax.swing.JLabel horaActual;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel nombreCliente;
    private javax.swing.JTextField nombreProducto;
    private javax.swing.JTextField numeroPedido;
    private javax.swing.JTextField porPagar;
    private javax.swing.JTextField precioProducto;
    private com.toedter.calendar.JDateChooser seleccionFecha;
    private javax.swing.JComboBox<String> seleccionHora;
    private javax.swing.JTextField totalPedido;
    private javax.swing.JTextField totalProducto;
    // End of variables declaration//GEN-END:variables
}
