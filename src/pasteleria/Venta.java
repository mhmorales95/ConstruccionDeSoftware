/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pasteleria;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mauricio
 */
public class Venta extends javax.swing.JFrame {
    
    private ArrayList<Integer> pedidos = new ArrayList<>();

    /**
     * Creates new form Venta
     */
    public Venta() {
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
        fechaActual();
        agregarItemsAlCombo();
        boleta.setSelected(true);
        calcularCorrelativo("boleta");
    }
    
    public void agregarItemsAlCombo() {
        buttonGroupMetodo.add(boleta);
        buttonGroupMetodo.add(transbank);
        buttonGroupMetodo.add(facturaEfectivo);
        buttonGroupMetodo.add(facturatransbank);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupMetodo = new javax.swing.ButtonGroup();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        codigoProducto = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        nombreProducto = new javax.swing.JTextField();
        cantidad = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        precioProducto = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        totalProducto = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        anadir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        codigoCliente = new javax.swing.JTextField();
        nombreCliente = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        numeroPedido = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        precioTotal = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        abono = new javax.swing.JTextField();
        porpagar = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        pagacon = new javax.swing.JTextField();
        vuelto = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        pagar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        correlativo = new javax.swing.JLabel();
        boleta = new javax.swing.JRadioButton();
        transbank = new javax.swing.JRadioButton();
        facturaEfectivo = new javax.swing.JRadioButton();
        facturatransbank = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1024, 700));
        setMinimumSize(new java.awt.Dimension(1024, 700));
        setPreferredSize(new java.awt.Dimension(1024, 700));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setBackground(new java.awt.Color(123, 101, 122));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Volver");
        jButton2.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 630, -1, -1));

        jPanel1.setBackground(new java.awt.Color(211, 80, 97));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Añadir ítem", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setMaximumSize(new java.awt.Dimension(700, 100));
        jPanel1.setMinimumSize(new java.awt.Dimension(700, 100));
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 100));

        jButton1.setText("Buscar");
        jButton1.setMaximumSize(new java.awt.Dimension(70, 30));
        jButton1.setMinimumSize(new java.awt.Dimension(70, 30));
        jButton1.setPreferredSize(new java.awt.Dimension(70, 30));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        codigoProducto.setMaximumSize(new java.awt.Dimension(105, 20));
        codigoProducto.setMinimumSize(new java.awt.Dimension(105, 20));
        codigoProducto.setPreferredSize(new java.awt.Dimension(105, 20));

        jButton3.setMaximumSize(new java.awt.Dimension(30, 20));
        jButton3.setMinimumSize(new java.awt.Dimension(30, 20));
        jButton3.setPreferredSize(new java.awt.Dimension(30, 20));

        nombreProducto.setEditable(false);
        nombreProducto.setMaximumSize(new java.awt.Dimension(230, 20));
        nombreProducto.setMinimumSize(new java.awt.Dimension(230, 20));
        nombreProducto.setPreferredSize(new java.awt.Dimension(230, 20));

        cantidad.setMaximumSize(new java.awt.Dimension(43, 20));
        cantidad.setMinimumSize(new java.awt.Dimension(43, 20));
        cantidad.setPreferredSize(new java.awt.Dimension(43, 20));
        cantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantidadActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Detalle");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Cantidad");

        precioProducto.setEditable(false);
        precioProducto.setMaximumSize(new java.awt.Dimension(70, 20));
        precioProducto.setMinimumSize(new java.awt.Dimension(70, 20));
        precioProducto.setPreferredSize(new java.awt.Dimension(70, 20));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Precio");

        totalProducto.setEditable(false);
        totalProducto.setMaximumSize(new java.awt.Dimension(70, 20));
        totalProducto.setMinimumSize(new java.awt.Dimension(70, 20));
        totalProducto.setPreferredSize(new java.awt.Dimension(70, 20));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Total");

        anadir.setText("Añadir");
        anadir.setMargin(new java.awt.Insets(2, 2, 2, 2));
        anadir.setMaximumSize(new java.awt.Dimension(70, 20));
        anadir.setMinimumSize(new java.awt.Dimension(70, 20));
        anadir.setPreferredSize(new java.awt.Dimension(70, 20));
        anadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anadirActionPerformed(evt);
            }
        });
        anadir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                anadirKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(codigoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(precioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(totalProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(anadir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(codigoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(precioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(anadir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 16, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 701, -1));

        jPanel2.setBackground(new java.awt.Color(211, 80, 97));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cliente", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setMaximumSize(new java.awt.Dimension(330, 131));
        jPanel2.setMinimumSize(new java.awt.Dimension(330, 131));
        jPanel2.setPreferredSize(new java.awt.Dimension(330, 131));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Código cliente:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre:");

        codigoCliente.setMaximumSize(new java.awt.Dimension(170, 20));
        codigoCliente.setMinimumSize(new java.awt.Dimension(170, 20));
        codigoCliente.setPreferredSize(new java.awt.Dimension(170, 20));
        codigoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoClienteActionPerformed(evt);
            }
        });
        codigoCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                codigoClienteKeyReleased(evt);
            }
        });

        nombreCliente.setForeground(new java.awt.Color(255, 255, 255));

        jButton5.setText("Buscar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("Cargar");
        jButton7.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton7.setMaximumSize(new java.awt.Dimension(30, 20));
        jButton7.setMinimumSize(new java.awt.Dimension(30, 20));
        jButton7.setPreferredSize(new java.awt.Dimension(30, 20));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton5)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(codigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(codigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nombreCliente))
                .addContainerGap())
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jPanel3.setBackground(new java.awt.Color(211, 80, 97));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pedido", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setMaximumSize(new java.awt.Dimension(358, 131));
        jPanel3.setMinimumSize(new java.awt.Dimension(358, 131));
        jPanel3.setPreferredSize(new java.awt.Dimension(358, 131));

        jButton8.setText("Buscar pedido");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Número pedido:");

        numeroPedido.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        numeroPedido.setMaximumSize(new java.awt.Dimension(59, 20));
        numeroPedido.setMinimumSize(new java.awt.Dimension(59, 20));
        numeroPedido.setPreferredSize(new java.awt.Dimension(59, 20));
        numeroPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroPedidoActionPerformed(evt);
            }
        });

        jButton11.setText("Ver detalle");
        jButton11.setMargin(new java.awt.Insets(2, 2, 2, 2));

        jButton14.setText("Cargar");
        jButton14.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton14.setMaximumSize(new java.awt.Dimension(59, 23));
        jButton14.setMinimumSize(new java.awt.Dimension(59, 23));
        jButton14.setPreferredSize(new java.awt.Dimension(59, 23));
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton11))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numeroPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 94, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(numeroPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 190, 360, -1));

        jPanel5.setBackground(new java.awt.Color(211, 80, 97));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        precioTotal.setEditable(false);
        precioTotal.setBackground(new java.awt.Color(255, 255, 255));
        precioTotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        precioTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        precioTotal.setMaximumSize(new java.awt.Dimension(146, 37));
        precioTotal.setMinimumSize(new java.awt.Dimension(146, 37));
        precioTotal.setPreferredSize(new java.awt.Dimension(110, 37));
        precioTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precioTotalActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("$");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Precio total:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Abono:");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("$");

        abono.setEditable(false);
        abono.setBackground(new java.awt.Color(255, 255, 255));
        abono.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        abono.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        abono.setEnabled(false);
        abono.setMaximumSize(new java.awt.Dimension(146, 37));
        abono.setMinimumSize(new java.awt.Dimension(146, 37));
        abono.setPreferredSize(new java.awt.Dimension(110, 37));
        abono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abonoActionPerformed(evt);
            }
        });

        porpagar.setEditable(false);
        porpagar.setBackground(new java.awt.Color(255, 255, 255));
        porpagar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        porpagar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        porpagar.setMaximumSize(new java.awt.Dimension(146, 37));
        porpagar.setMinimumSize(new java.awt.Dimension(146, 37));
        porpagar.setPreferredSize(new java.awt.Dimension(110, 37));

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("$");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Por pagar:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Paga con:");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("$");

        pagacon.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        pagacon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        pagacon.setMaximumSize(new java.awt.Dimension(146, 37));
        pagacon.setMinimumSize(new java.awt.Dimension(146, 37));
        pagacon.setPreferredSize(new java.awt.Dimension(110, 37));
        pagacon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagaconActionPerformed(evt);
            }
        });

        vuelto.setEditable(false);
        vuelto.setBackground(new java.awt.Color(255, 255, 255));
        vuelto.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        vuelto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        vuelto.setMaximumSize(new java.awt.Dimension(146, 37));
        vuelto.setMinimumSize(new java.awt.Dimension(146, 37));
        vuelto.setPreferredSize(new java.awt.Dimension(110, 37));
        vuelto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vueltoActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("$");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Vuelto:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel21)
                        .addGap(9, 9, 9)
                        .addComponent(abono, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel18)
                        .addGap(9, 9, 9)
                        .addComponent(vuelto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pagacon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(porpagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(precioTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(precioTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(abono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel23)
                    .addComponent(porpagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel11)
                    .addComponent(pagacon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vuelto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel18))))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 117, 290, 290));

        pagar.setBackground(new java.awt.Color(123, 101, 122));
        pagar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        pagar.setForeground(new java.awt.Color(255, 255, 255));
        pagar.setText("Pagar");
        pagar.setMargin(new java.awt.Insets(2, 2, 2, 2));
        pagar.setMaximumSize(new java.awt.Dimension(146, 37));
        pagar.setMinimumSize(new java.awt.Dimension(146, 37));
        pagar.setPreferredSize(new java.awt.Dimension(146, 37));
        pagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagarActionPerformed(evt);
            }
        });
        getContentPane().add(pagar, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 630, 100, -1));

        jPanel4.setBackground(new java.awt.Color(211, 80, 97));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tipo documento", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel4.setMaximumSize(new java.awt.Dimension(700, 90));
        jPanel4.setMinimumSize(new java.awt.Dimension(700, 90));
        jPanel4.setPreferredSize(new java.awt.Dimension(700, 90));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Tipo:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Correlativo:");

        correlativo.setForeground(new java.awt.Color(255, 255, 255));
        correlativo.setText("12345");

        boleta.setBackground(new java.awt.Color(211, 80, 97));
        boleta.setForeground(new java.awt.Color(255, 255, 255));
        boleta.setText("Boleta");
        boleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boletaActionPerformed(evt);
            }
        });

        transbank.setBackground(new java.awt.Color(211, 80, 97));
        transbank.setForeground(new java.awt.Color(255, 255, 255));
        transbank.setText("Transbank");
        transbank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transbankActionPerformed(evt);
            }
        });

        facturaEfectivo.setBackground(new java.awt.Color(211, 80, 97));
        facturaEfectivo.setForeground(new java.awt.Color(255, 255, 255));
        facturaEfectivo.setText("Factura boleta");
        facturaEfectivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facturaEfectivoActionPerformed(evt);
            }
        });

        facturatransbank.setBackground(new java.awt.Color(211, 80, 97));
        facturatransbank.setForeground(new java.awt.Color(255, 255, 255));
        facturatransbank.setText("Factura transbank");
        facturatransbank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facturatransbankActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Fecha:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(boleta)
                        .addGap(18, 18, 18)
                        .addComponent(transbank)
                        .addGap(18, 18, 18)
                        .addComponent(facturaEfectivo)
                        .addGap(18, 18, 18)
                        .addComponent(facturatransbank)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(correlativo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(correlativo)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(boleta)
                    .addComponent(transbank)
                    .addComponent(facturaEfectivo)
                    .addComponent(facturatransbank))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 700, -1));

        jButton9.setText("E");
        jButton9.setMaximumSize(new java.awt.Dimension(45, 23));
        jButton9.setMinimumSize(new java.awt.Dimension(45, 23));
        jButton9.setPreferredSize(new java.awt.Dimension(45, 23));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 470, -1, -1));

        jButton10.setText("D");
        jButton10.setMaximumSize(new java.awt.Dimension(45, 23));
        jButton10.setMinimumSize(new java.awt.Dimension(45, 23));
        jButton10.setPreferredSize(new java.awt.Dimension(45, 23));
        getContentPane().add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 560, -1, -1));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descripción", "Cantidad", "Precio unitario", "Precio total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tabla);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 650, 185));

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/FondoVenta.jpg"))); // NOI18N
        jLabel24.setText("jLabel24");
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void facturaEfectivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facturaEfectivoActionPerformed
        calcularCorrelativo("facturaefectivo");
    }//GEN-LAST:event_facturaEfectivoActionPerformed

    private void precioTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precioTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_precioTotalActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        BusquedaPedido b = new BusquedaPedido(this, true);
        if (!codigoCliente.getText().equals("")) {
            b.buscartxt.setText(codigoCliente.getText());
            b.buscar();
            b.buscartxt.setEnabled(false);
        }
        
        b.setVisible(true);
        
        if (codigoCliente.getText().equals("")) {
            codigoCliente.setText("" + b.getCliente());
            try {
                llamarCliente(codigoCliente.getText());
            } catch (SQLException ex) {
                Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        numeroPedido.setText("" + b.getCodigo());
        if (abono.getText().equals("")) {
            abono.setText("0");
        }
        abono.setText("" + (b.getAbono() + Integer.parseInt(abono.getText())));
        cargarPedido();
        

    }//GEN-LAST:event_jButton8ActionPerformed
    
    public void finalizarPedidos() throws SQLException {
        MySQL my = new MySQL();
        Connection con = my.getConnection();
        Statement sql;
        try {
            for (int p : pedidos) {
                sql = con.createStatement();
                PreparedStatement stmt = con.prepareStatement("UPDATE pedido SET estado = ? WHERE codigo = ?;");
                stmt.setString(1, "fin");
                stmt.setInt(2, p);
                stmt.executeUpdate();
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void obtenerMinimo(String codigo) throws SQLException {
        MySQL my = new MySQL();
        Connection con = my.getConnection();
        Statement sql;
        try {
            sql = con.createStatement();
            
            PreparedStatement stmt = con.prepareStatement("SELECT * FROM productos WHERE codigo = ?");
            stmt.setString(1, codigo);
            
            ResultSet rs;
            rs = stmt.executeQuery();
            
            boolean r = rs.next();
            while (r) {
                
                if (rs.getDouble("stock") <= rs.getDouble("minimo")) {
                    JOptionPane.showMessageDialog(this, "Stock bajo mínimo, producto: " + rs.getString("nombre"), "Información", JOptionPane.INFORMATION_MESSAGE);
                    
                }
                
                r = rs.next();
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
        }        
        
    }

    public void reducirStock(String codigo, Double cantidad) throws SQLException {
        MySQL my = new MySQL();
        Connection con = my.getConnection();
        Statement sql;
        try {
            sql = con.createStatement();
            
            PreparedStatement stmt = con.prepareStatement("SELECT * FROM productos WHERE codigo = ?");
            stmt.setString(1, codigo);
            
            ResultSet rs;
            rs = stmt.executeQuery();
            
            boolean r = rs.next();
            while (r) {
                if (rs.getInt("mueve") == 1) {
                    reducir(codigo, rs.getDouble("stock") - cantidad);
                }
                if (rs.getInt("incluye") == 1) {
                    reducirReceta(codigo, cantidad);
                }
                
                r = rs.next();
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void reducir(String codigo, Double stock) throws SQLException {
        MySQL my = new MySQL();
        Connection con = my.getConnection();
        Statement sql;
        try {
            sql = con.createStatement();
            PreparedStatement stmt = con.prepareStatement("UPDATE productos SET stock = ? WHERE codigo = ?");
            stmt.setDouble(1, stock);
            stmt.setString(2, codigo);
            
            stmt.executeUpdate();
            
        } catch (SQLException ex) {
            Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }
    
    public void reducirReceta(String codigo, Double cantidad) throws SQLException {
        MySQL my = new MySQL();
        Connection con = my.getConnection();
        Statement sql;
        try {
            sql = con.createStatement();
            
            PreparedStatement stmt = con.prepareStatement("SELECT * FROM receta WHERE producto = ?");
            stmt.setString(1, codigo);
            
            ResultSet rs;
            rs = stmt.executeQuery();
            
            boolean r = rs.next();
            while (r) {
                
                reducirReceta2(rs.getString("productoreceta"), rs.getDouble("cantidad") * cantidad, obtenerStock(rs.getString("productoreceta")));
                
                r = rs.next();
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            if (con != null) {
                con.close();
            }
        }
    }
    
    public Double obtenerStock(String codigo) throws SQLException {
        MySQL my = new MySQL();
        Connection con = my.getConnection();
        Statement sql;
        try {
            sql = con.createStatement();
            
            PreparedStatement stmt = con.prepareStatement("SELECT * FROM productos WHERE codigo = ?");
            stmt.setString(1, codigo);
            
            ResultSet rs;
            rs = stmt.executeQuery();
            double f = 0;
            boolean r = rs.next();
            while (r) {
                
                f = rs.getDouble("stock");
                
                r = rs.next();
            }
            return f;
            
        } catch (SQLException ex) {
            Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
        }        
        return null;
    }
    
    public void reducirReceta2(String codigo, Double stock, Double stockproducto) throws SQLException {
        MySQL my = new MySQL();
        Connection con = my.getConnection();
        Statement sql;
        try {
            sql = con.createStatement();
            PreparedStatement stmt = con.prepareStatement("UPDATE productos SET stock = ? WHERE codigo = ?;");
            stmt.setDouble(1, stockproducto - stock);
            stmt.setString(2, codigo);
            
            stmt.executeUpdate();
            
        } catch (SQLException ex) {
            Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            if (con != null) {
                con.close();
            }
        }
    }
    

    private void abonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_abonoActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        BusquedaCliente b = new BusquedaCliente(this, true);
        b.setVisible(true);
        
        codigoCliente.setText(b.obtenerCodigo());
        nombreCliente.setText(b.obtenerNombre());
    }//GEN-LAST:event_jButton5ActionPerformed

    private void numeroPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroPedidoActionPerformed

    }//GEN-LAST:event_numeroPedidoActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        cargarPedido();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {
            llamarCliente(codigoCliente.getText());
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void pagaconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagaconActionPerformed
        vuelto.setText("" + (Integer.parseInt(pagacon.getText()) - Integer.parseInt(porpagar.getText())));
    }//GEN-LAST:event_pagaconActionPerformed

    private void vueltoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vueltoActionPerformed
        pagar.requestFocus();
    }//GEN-LAST:event_vueltoActionPerformed

    private void pagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagarActionPerformed
        MySQL my = new MySQL();
        Connection con = my.getConnection();
        Statement sql;
        String tipo = "";
        java.util.Date date = new Date();
        
        java.sql.Date fechaActual = new java.sql.Date(date.getTime());
        java.sql.Time horaActual = new java.sql.Time(date.getTime());
        if (!correlativo.getText().equals("")) {
            try {
                sql = con.createStatement();
                PreparedStatement stmt = con.prepareStatement("INSERT INTO ventaresumen (correlativo, tipo,"
                        + "codigoCliente, neto, iva, total, fecha, hora, estado, codigoUsuario)"
                        + " VALUES (?,?,?,?,?,?,?,?,?,?);");
                
                stmt.setInt(1, Integer.parseInt(correlativo.getText()));
                
                if (boleta.isSelected()) {
                    stmt.setString(2, "boleta");
                    tipo = "boleta";
                } else if (transbank.isSelected()) {
                    stmt.setString(2, "tarjeta");
                    tipo = "tarjeta";
                } else if (facturaEfectivo.isSelected()) {
                    stmt.setString(2, "facturaefectivo");
                    tipo = "facturaefectivo";
                } else if (facturatransbank.isSelected()) {
                    stmt.setString(2, "facturatransbank");
                    tipo = "facturatransbank";
                }
                if (codigoCliente.getText().equals("")) {
                    codigoCliente.setText("0");
                }
                stmt.setInt(3, Integer.parseInt(codigoCliente.getText()));
                stmt.setInt(4, Integer.parseInt(precioTotal.getText()) - (int) (Integer.parseInt(precioTotal.getText()) * 0.19));
                stmt.setInt(5, (int) (Integer.parseInt(precioTotal.getText()) * 0.19));
                stmt.setInt(6, Integer.parseInt(precioTotal.getText()));
                
                stmt.setDate(7, fechaActual);
                stmt.setTime(8, horaActual);
                stmt.setString(9, "");
                stmt.setInt(10, MenuPrincipal.usuario);
                
                stmt.executeUpdate();

                //carga de detalle de productos
                DefaultTableModel tm = (DefaultTableModel) tabla.getModel();
                
                int filas = tabla.getRowCount();
                ArrayList<String> datos = new ArrayList<>();
                for (int i = 0; i < filas; i++) {
                    String codigo = String.valueOf(tm.getValueAt(i, 0));
                    double cantidad = Double.parseDouble(String.valueOf(tm.getValueAt(i, 2)));
                    int unitario = Integer.parseInt(String.valueOf(tm.getValueAt(i, 3)));
                    int total = Integer.parseInt(String.valueOf(tm.getValueAt(i, 4)));
                    insertarDetalle(codigo, cantidad, tipo, unitario, total);
                    datos.add(codigo);
                    datos.add(String.valueOf(tm.getValueAt(i, 1)));
                    datos.add(cantidad + "");
                    datos.add(unitario + "");
                    datos.add(total + "");
                    reducirStock(codigo, cantidad);
                    
                }
                imprimir(datos);
                finalizarPedidos();
                
                boleta.setSelected(true);
                calcularCorrelativo("boleta");
                limpiarVentana(true);
                
            } catch (SQLException ex) {
                Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            JOptionPane.showMessageDialog(this, "Venta Finalizada", "Información", JOptionPane.INFORMATION_MESSAGE);
            
        } else {
            JOptionPane.showMessageDialog(this, "Es necesario rellenar todos los campos", "Información", JOptionPane.INFORMATION_MESSAGE);
        }
        
    }//GEN-LAST:event_pagarActionPerformed
    
    public void imprimir(ArrayList a) {
        Imprimir i = new Imprimir();
        i.finalidad = "venta";
        i.datos = a;
        
        i.total = precioTotal.getText();
        i.cliente = nombreCliente.getText();
        
        if (boleta.isSelected()) {
            i.correlativo = "Boleta " + correlativo.getText();
        } else if (transbank.isSelected()) {
            i.correlativo = "Tarjeta " + correlativo.getText();
        } else if (facturaEfectivo.isSelected()) {
            i.correlativo = "Factura efectivo " + correlativo.getText();
        } else if (facturatransbank.isSelected()) {
            i.correlativo = "Factura tarjeta " + correlativo.getText();
        }
        i.imprime("Microsoft Print to PDF");
    }
    
    public void insertarDetalle(String codigo, double cantidad, String tipo, int unitario, int total) {
        try {
            
            MySQL my = new MySQL();
            Connection con = my.getConnection();
            Statement sql;
            sql = con.createStatement();
            PreparedStatement stmt = con.prepareStatement("INSERT INTO ventadetalle (correlativo,"
                    + "tipo, codigoProducto, cantidad,unitario, total)"
                    + " VALUES (?,?,?,?,?,?);");
            
            stmt.setInt(1, Integer.parseInt(correlativo.getText()));
            
            stmt.setString(2, tipo);
            
            stmt.setString(3, codigo);
            
            stmt.setDouble(4, cantidad);
            
            stmt.setInt(5, unitario);
            
            stmt.setInt(6, total);
            
            stmt.executeUpdate();
            
        } catch (SQLException ex) {
            Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void limpiarVentana(boolean borrarCliente) {
        limpiarTabla();
        numeroPedido.setText("");
        if (borrarCliente) {
            codigoCliente.setText("");
            
        }
        nombreCliente.setText("");
        precioTotal.setText("");
        abono.setText("");
        porpagar.setText("");
        pagacon.setText("");
        vuelto.setText("");
        pedidos.clear();
    }

    public void limpiarTabla() {
        DefaultTableModel tb = (DefaultTableModel) tabla.getModel();
        int a = tabla.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            tb.removeRow(tb.getRowCount() - 1);
        }
        
    }
    
    private void boletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boletaActionPerformed
        calcularCorrelativo("boleta");
    }//GEN-LAST:event_boletaActionPerformed

    private void transbankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transbankActionPerformed
        calcularCorrelativo("transbank");
    }//GEN-LAST:event_transbankActionPerformed

    private void facturatransbankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facturatransbankActionPerformed
        calcularCorrelativo("facturatransbank");
    }//GEN-LAST:event_facturatransbankActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        BusquedaProducto b = new BusquedaProducto(this, true);
        b.setVisible(true);
        
        codigoProducto.setText(b.obtenerCodigo());
        try {
            obtenerMinimo(codigoProducto.getText());
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
        nombreProducto.setText(b.obtenerNombre());
        precioProducto.setText(b.obtenerPrecio());
        cantidad.requestFocus();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantidadActionPerformed
        if (!cantidad.getText().equals("")) {
            anadir.requestFocus();
            try {
                totalProducto.setText("" + (int) Double.parseDouble(cantidad.getText()) * Integer.parseInt(precioProducto.getText()));
                
            } catch (Exception e) {
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debes ingresar una cantidad", "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_cantidadActionPerformed

    private void anadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anadirActionPerformed
        try {
            cargarProductoATabla();
        } catch (SQLException ex) {
            Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_anadirActionPerformed

    private void anadirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_anadirKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                cargarProductoATabla();
            } catch (SQLException ex) {
                Logger.getLogger(Venta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_anadirKeyPressed

    private void codigoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoClienteActionPerformed

    private void codigoClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoClienteKeyReleased
        limpiarVentana(false);
    }//GEN-LAST:event_codigoClienteKeyReleased

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        eliminarFilaDeTabla(tabla);
    }//GEN-LAST:event_jButton9ActionPerformed
    
    public void eliminarFilaDeTabla(JTable tblDetalle) {
        DefaultTableModel modelo = (DefaultTableModel) tblDetalle.getModel();
        int fila = tblDetalle.getSelectedRow();
        if (fila >= 0) {
            int[] filasselec = tblDetalle.getSelectedRows();
            for (int i = 0; i < filasselec.length; i++) {
                modelo.removeRow(filasselec[i]);
                
                sumarTotal();
                
            }
        } else {
            JOptionPane.showMessageDialog(null, "No Seleccionó ninguna fila", "Aviso", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void cargarProductoATabla() throws SQLException {
        
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        
        if (!this.cantidad.getText().equals("")) {
            Object[] fila = new Object[5];
            
            fila[0] = codigoProducto.getText();
            fila[1] = nombreProducto.getText();;
            fila[2] = cantidad.getText();
            fila[3] = precioProducto.getText();
            fila[4] = totalProducto.getText();
            modelo.addRow(fila);
            
            tabla.setModel(modelo);
            sumarTotal();
        } else {
            JOptionPane.showMessageDialog(this, "Debes ingresar una cantidad", "Información", JOptionPane.INFORMATION_MESSAGE);
        }
        
    }

    public void calcularCorrelativo(String tipo) {
        MySQL my = new MySQL();
        Connection con = my.getConnection();
        Statement sql;
        int numero = 0;
        try {
            
            sql = con.createStatement();
            PreparedStatement stmt = con.prepareStatement("SELECT MAX(correlativo)"
                    + "FROM ventaresumen WHERE tipo = ?;");
            stmt.setString(1, tipo);
            
            ResultSet rs;
            rs = stmt.executeQuery();
            
            boolean r = rs.next();
            while (r) {
                
                numero = rs.getInt("MAX(correlativo)") + 1;
                
                r = rs.next();
            }
            
            correlativo.setText(numero + "");
        } catch (SQLException ex) {
            Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    public void llamarCliente(String cod) throws SQLException {
        MySQL my = new MySQL();
        Connection con = my.getConnection();
        Statement sql;
        
        try {
            sql = con.createStatement();
            PreparedStatement stmt = con.prepareStatement("SELECT * FROM clientes WHERE codigo = ? ");
            stmt.setString(1, cod);
            ResultSet rs;
            rs = stmt.executeQuery();
            boolean r = rs.next();
            while (r) {
                
                nombreCliente.setText(rs.getString("nombre"));
                r = rs.next();
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            if (con != null) {
                con.close();
            }
        }
    }
    
    public void cargarPedido() {
        if (!pedidos.contains(Integer.parseInt(numeroPedido.getText()))) {
            pedidos.add(Integer.parseInt(numeroPedido.getText()));
            MySQL my = new MySQL();
            Connection con = my.getConnection();
            Statement sql;
            
            try {
                sql = con.createStatement();
                
                PreparedStatement stmt = con.prepareStatement("SELECT * FROM pedido, pedidodetalle, productos WHERE "
                        + "pedidodetalle.codigoProducto = productos.codigo AND"
                        + " pedidoDetalle.codigoPedido = pedido.codigo AND pedidodetalle.codigoPedido = ?");
                stmt.setInt(1, Integer.parseInt(numeroPedido.getText()));
                ResultSet rs;
                rs = stmt.executeQuery();
                
                boolean r = rs.next();
                while (r) {
                    
                    if (codigoCliente.getText().equals("")) {
                        codigoCliente.setText("" + rs.getInt("pedido.codigoCliente"));
                        llamarCliente("" + rs.getInt("pedido.codigoCliente"));
                    }
                    if (abono.getText().equals("")) {
                        abono.setText("0");
                    }
                    abono.setText("" + (rs.getInt("pedido.abono") + Integer.parseInt(abono.getText())));
                    DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
                    
                    Object[] fila = new Object[5];
                    
                    fila[0] = rs.getString("productos.codigo");
                    fila[1] = rs.getString("productos.nombre");
                    fila[2] = rs.getDouble("pedidodetalle.cantidad");
                    fila[3] = rs.getInt("pedidodetalle.unitario");
                    fila[4] = rs.getInt("pedidodetalle.total");
                    
                    obtenerMinimo(rs.getString("productos.codigo"));
                    modelo.addRow(fila);
                    
                    tabla.setModel(modelo);
                    
                    r = rs.next();
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            sumarTotal();
        } else {
            JOptionPane.showMessageDialog(this, "Pedido se encuentra cargado", "Información", JOptionPane.INFORMATION_MESSAGE);
            
        }
        
    }
    
    public void sumarTotal() {
        DefaultTableModel tm = (DefaultTableModel) tabla.getModel();
        
        int filas = tabla.getRowCount();
        int suma = 0;
        for (int i = 0; i < filas; i++) {
            String dato = String.valueOf(tm.getValueAt(i, 4));
            suma += Integer.parseInt(dato);
        }
        
        precioTotal.setText(suma + "");
        if (abono.getText().equals("")) {
            abono.setText("0");
        }
        porpagar.setText("" + (suma - (Integer.parseInt(abono.getText()))));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Venta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Venta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Venta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Venta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Venta().setVisible(true);
            }
        });
    }
    
    public void fechaActual() {
        Date date = new Date();
        Format dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        jLabel5.setText(dateFormat.format(date));
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField abono;
    private javax.swing.JButton anadir;
    private javax.swing.JRadioButton boleta;
    private javax.swing.ButtonGroup buttonGroupMetodo;
    private javax.swing.JTextField cantidad;
    public javax.swing.JTextField codigoCliente;
    private javax.swing.JTextField codigoProducto;
    private javax.swing.JLabel correlativo;
    private javax.swing.JRadioButton facturaEfectivo;
    private javax.swing.JRadioButton facturatransbank;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel nombreCliente;
    private javax.swing.JTextField nombreProducto;
    private javax.swing.JTextField numeroPedido;
    private javax.swing.JTextField pagacon;
    private javax.swing.JButton pagar;
    private javax.swing.JTextField porpagar;
    private javax.swing.JTextField precioProducto;
    private javax.swing.JTextField precioTotal;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField totalProducto;
    private javax.swing.JRadioButton transbank;
    private javax.swing.JTextField vuelto;
    // End of variables declaration//GEN-END:variables
}
